
/* ------------------------------ Data Sources ------------------------------ */  # Data Sources are like variables, but they retrive data from AWS or other terraform configuration

# --------------------------------- Examble One --------------------------------- 

# data "aws_ami" "web_ami" {
  # most_recent = true
  # owners      = ["self"]

  # tags = {
    # Name   = "webserver"
    # Deploy = "true"
  # }
# }

# resource "aws_instance" "web" {
  # ami = data.aws_ami.web_ami.id
# }

# --------------------------------- Examble Two --------------------------------- 

# data "aws_ami" "ubuntu" {
  # most_recent = true
  # filter {
    # name   = "name"
    # values = ["ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*"]
  # }
  # filter {
    # name   = "virtualization-type"
    # values = ["hvm"]
  # }
  # owners      = ["099720109477"] # 099720109477 is Canonical
# }

/* ------------------------------ Data Sources ------------------------------ */

/* ---------------------------------------------------------------------------------------------------------------- */

# -------------------------- commented the next block to creaete an auto scaling group
# resource "aws_instance" "prod_web" {
#   count         = 2

#   ami           = "ami-0f129ae03ee4c74a0"
#   instance_type = "t2.nano"
  
#   vpc_security_group_ids = [
#     aws_security_group.prod_web.id
#   ]

#     tags = {
#       "Terraform" : "true"
#   }
# }

# -------------------------- no need for the eib nor the associaiton rn 
# resource "aws_eip_association" "prod_web" {
#   instance_id   = aws_instance.prod_web.0.id # or instance_id   = aws_instance.prod_web[0].id  this refere to the first instance 
#   allocation_id = aws_eip.prod_web.id
# }

# resource "aws_eip" "prod_web" {
#   # instance = aws_instance.prod_web.id
#     tags = {
#       "Terraform" : "true"
#   }
# }

